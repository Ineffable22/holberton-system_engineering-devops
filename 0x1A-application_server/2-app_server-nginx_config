Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.13.0-1027-gcp x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

 System information disabled due to load higher than 1.0

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

14 updates can be applied immediately.
To see these additional updates run: apt list --upgradable


2 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

Last login: Thu Jun  9 00:28:33 2022 from 190.235.24.23
ubuntu@3688-web-01:~$ sudo service nginx restart


Job for nginx.service failed because the control process exited with error code.
See "systemctl status nginx.service" and "journalctl -xe" for details.
ubuntu@3688-web-01:~$ gunicorn --bind 0.0.0.0:5000 web_flask.0-hello_route:app
[2022-06-09 00:34:21 +0000] [1163] [INFO] Starting gunicorn 20.0.4
[2022-06-09 00:34:21 +0000] [1163] [ERROR] Connection in use: ('0.0.0.0', 5000)
[2022-06-09 00:34:21 +0000] [1163] [ERROR] Retrying in 1 second.
[2022-06-09 00:34:22 +0000] [1163] [ERROR] Connection in use: ('0.0.0.0', 5000)
[2022-06-09 00:34:22 +0000] [1163] [ERROR] Retrying in 1 second.
[2022-06-09 00:34:23 +0000] [1163] [ERROR] Connection in use: ('0.0.0.0', 5000)
[2022-06-09 00:34:23 +0000] [1163] [ERROR] Retrying in 1 second.
[2022-06-09 00:34:24 +0000] [1163] [ERROR] Connection in use: ('0.0.0.0', 5000)
[2022-06-09 00:34:24 +0000] [1163] [ERROR] Retrying in 1 second.
[2022-06-09 00:34:25 +0000] [1163] [ERROR] Connection in use: ('0.0.0.0', 5000)
[2022-06-09 00:34:25 +0000] [1163] [ERROR] Retrying in 1 second.
[2022-06-09 00:34:26 +0000] [1163] [ERROR] Can't connect to ('0.0.0.0', 5000)
ubuntu@3688-web-01:~$ sudo /etc/n
netplan/             networkd-dispatcher/ nginx/
network/             newt/                nvme/
ubuntu@3688-web-01:~$ sudo /etc/nginx/
conf.d/            modules-enabled/   sites-enabled/
modules-available/ sites-available/   snippets/
ubuntu@3688-web-01:~$ sudo /etc/nginx/sites-enabled/
sudo: /etc/nginx/sites-enabled/: command not found
ubuntu@3688-web-01:~$ sudo emacs /etc/nginx/sites-available/default
cat ubuntu@3688-web-01^C$ sudo emacs /etc/nginx/sites-available/default
ubuntu@3688-web-01:~$ cat /etc/nginx/sites-available/default
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        add_header X-Served-By 3688-web-01;
        error_page 404 /404.html;
        listen 80 default_server;

        location /hbnb_static/ {
                alias /data/web_static/current/;
        }

        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;
        rewrite ^/redirect_me https://www.youtube.com/watch?v=hdZUCjAQaGw permanent;

        location /airbnb-onepage/ {
                include proxy_params;
                proxy_pass http://0.0.0.0:5000/airbnb-onepage/;
        }

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
        error_page 404 /404.html;
        error_page 404 /404.html;
        error_page 404 /404.html;
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
